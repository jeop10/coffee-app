version: "3.9"

services:
# - Frontend

  coffee-frontend:
    build:
      context: .
      dockerfile: coffee-frontend.dockerfile
      args:
        CONFIG_FILE: nginx/frontend.conf 
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./coffee-frontend:/var/www/html/
    networks:
      - coffee_laravel
    links:
      - coffee-backend
    depends_on:
      - coffee-database
      - laravel-frontend  

  laravel-frontend:
    build:
      context: .
      dockerfile: laravel-php.dockerfile
    volumes:
      - ./coffee-frontend:/var/www/html/
    networks:
      - coffee_laravel

# - Backend

  coffee-backend:
    image: nginx:1.21.3-alpine
    networks:
      - coffee_laravel
      - coffee_network #allow direct connect to DB
    depends_on:
      - coffee-database
      - laravel-backend

  laravel-backend:
    image: php:8-fpm-alpine

# - DATABASE

  coffee-database:
    image: mariadb:10.5
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - coffee_network #allow direct connect to DB
    volumes:
      - mysql:/var/lib/mysql


# - Composer builder
  composer-front:
    image: composer/composer
    volumes:
      - "./coffee-frontend:/composer"
    working_dir: /composer
    command: install

# - Certbot
  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/cerbot/letsencrypt
      - certbot-var:/var/libt/letsencrypt
      - ./coffee-frontend:/var/www/html/
    depends_on:
      - coffee-frontend
    command: certonly --webroot --webroot-path=/var/www/html/public --email email --agree-tos --no-eff-email --staging -d domain -d www.domain.com

# - Networks

networks:
  coffee_laravel:
  coffee_network:

# - Volumes
volumes:
  mysql:
  certbot-etc:
  certbot-var:
